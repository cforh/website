---
import { getNameFromLocale } from "../utils/i18n";

type Props = {
  locales: string[];
  currentLocale: string;
  translations?: Record<string, string>;
};

const { translations, currentLocale, locales } = Astro.props;

const collection = locales.map((locale) => {
  return {
    value: translations?.[locale] ?? `/`,
    label: getNameFromLocale(locale) ?? locale,
    selected: locale === currentLocale,
  };
});
---

<select autocomplete="off" class="language-switcher">
  {
    collection.map(({ value, label, selected }) => (
      <option value={value} {...(selected ? { selected: "true" } : {})}>
        {label}
      </option>
    ))
  }
</select>

<script>
  import { navigate } from "astro:transitions/client";
  function register() {
    const languageSwitchers = document.querySelectorAll(".language-switcher");
    languageSwitchers.forEach((select) => {
      select.addEventListener("change", (event) => {
        const selectedOption = event.currentTarget as HTMLSelectElement;
        if (selectedOption) {
          navigate(selectedOption.value);
        }
      });
    });
  }

  register();
  document.addEventListener("astro:after-swap", register);
</script>
