---
import type { ImageMetadata } from "astro";
import DerivedCover from "../components/DerivedCover.astro";

type Props = {
  title: string;
  titleLevel?: "h2" | "h3" | "h4" | "h5" | "h6";
  cover?: { alt: string; image: ImageMetadata };
  icon?: { alt: string; image: ImageMetadata };
};

const { title, titleLevel: TitleTag = "h2", cover, icon } = Astro.props;
---

<div class="card">
  <TitleTag class="card-title">
    {title}
  </TitleTag>
  <div class="card-description">
    <slot name="description">
      <p>Set description slot!</p>
    </slot>
  </div>
  <div class="card-actions">
    <slot name="actions">
      <a href="#" class="button">Set actions slot!</a>
    </slot>
  </div>
  <div class="card-spotlight">
    <div class="card-spotlight-background">
      {cover && <img src={cover.image.src} alt={cover.alt} width={cover.image.width} height={cover.image.height} />}
      {!cover && <DerivedCover value={title} />}
    </div>
    {icon && <img src={icon.image.src} alt={icon.alt} width={icon.image.width} height={icon.image.height} />}
  </div>
</div>

<style>
  .card {
    display: grid;
    grid-template-columns: minmax(0, 60%) auto;
    grid-template-areas:
      "title spotlight"
      "description spotlight"
      "actions spotlight";
    gap: var(--size-gap);
    font-size: var(--size-font-large);
    background: var(--color-white-97);
    padding: var(--size-gap-large);
    border-radius: var(--size-border-radius-large);
    border: var(--border-massive);
  }

  .card-title {
    grid-area: title;
    margin: 0;
  }

  .card-description {
    grid-area: description;
  }

  .card-actions {
    grid-area: actions;
  }

  .card-spotlight {
    grid-area: spotlight;
    height: 100%;
    position: relative;

    .card-spotlight-background {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      svg {
        border-radius: var(--size-border-radius-large);
        width: 100%;
        height: 100%;
      }
    }
  }
</style>
