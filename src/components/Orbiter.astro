---

---

<div class="orbiter">
  <slot name="host" />
  <div class="orbits">
    <slot name="orbits" />
  </div>
</div>

<style>
  @property --sibling-index {
    syntax: "<number>";
    inherits: false;
    initial-value: 1;
  }

  @property --sibling-count {
    syntax: "<number>";
    inherits: false;
    initial-value: 1;
  }

  @property --orbit {
    syntax: "<number>";
    inherits: true;
    initial-value: 1;
  }

  @keyframes revolve {
    from {
      offset-distance: 0%;
    }
    to {
      offset-distance: 100%;
    }
  }

  @keyframes hide {
    0% {
      z-index: -1;
    }

    24.9% {
      z-index: -1;
    }
    25% {
      z-index: 0;
    }
    75% {
      z-index: 0;
    }
    75.1% {
      z-index: -1;
    }
    100% {
      z-index: -1;
    }
  }

  @keyframes flip {
    0% {
      offset-rotate: auto 270deg;
    }

    24.9% {
      offset-rotate: auto 270deg;
    }
    25% {
      offset-rotate: auto 90deg;
    }
    75% {
      offset-rotate: auto 90deg;
    }
    75.1% {
      offset-rotate: auto 270deg;
    }
    100% {
      offset-rotate: auto 270deg;
    }
  }

  .orbiter {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    position: relative;
    height: 100%;
    width: 100%;
    overflow: hidden;
    user-select: none;
  }

  .orbits {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
  }

  :global(.orbit) {
    display: inline-grid;
    position: absolute;

    &:nth-child(even) > :global(*) {
      animation-direction: reverse;
    }
  }

  :global(.orbit) > :global(*) {
    --speed: 30s;
    font-size: 3rem;
    max-width: 3rem;
    max-height: 3rem;
    offset-path: ellipse(calc(120px * var(--orbit)) calc(300px * var(--orbit)) at 0% 50%);
    offset-distance: 0%;
    offset-rotate: auto 90deg;
    animation:
      revolve var(--speed) linear infinite,
      hide var(--speed) linear infinite;
    animation-delay: calc(var(--speed) * -1 * (var(--sibling-index) - 1) / var(--sibling-count));
  }

  @container (width > 40rem) {
    .orbiter {
      justify-content: center;
    }

    :global(.orbit) {
      left: 0;
    }

    :global(.orbit) > :global(*) {
      --speed: 30s;
      animation:
        revolve var(--speed) linear infinite,
        flip var(--speed) linear infinite;
      animation-delay: calc(var(--speed) * -1 * (var(--sibling-index) - 1) / var(--sibling-count));
    }
  }

  @container (width < 23rem) {
    :global(.orbit):nth-child(n + 2) {
      display: none;
    }
  }
</style>

<script>
  function register() {
    const orbits = document.querySelectorAll<HTMLElement>(".orbit");
    orbits.forEach((orbit, index) => {
      const children = orbit.children as HTMLCollectionOf<HTMLElement>;
      const count = children.length;
      orbit.style.setProperty("--orbit", String(index + 1));

      Array.from(children).forEach((orbitElement, childIndex) => {
        orbitElement.style.setProperty("--sibling-index", String(childIndex + 1));
        orbitElement.style.setProperty("--sibling-count", String(count));
      });
    });
  }

  register();
  document.addEventListener("astro:after-swap", register);
</script>
